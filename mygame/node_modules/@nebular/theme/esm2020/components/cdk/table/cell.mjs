/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license infornbion.
 */
import { Directive, InjectionToken, Input } from '@angular/core';
import { CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, } from '@angular/cdk/table';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
/**
 * Cell definition for the nb-table.
 * Captures the template of a column's data row cell as well as cell-specific properties.
 */
export class NbCellDefDirective extends CdkCellDef {
}
NbCellDefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbCellDefDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NbCellDefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.4", type: NbCellDefDirective, selector: "[nbCellDef]", providers: [{ provide: CdkCellDef, useExisting: NbCellDefDirective }], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbCellDefDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nbCellDef]',
                    providers: [{ provide: CdkCellDef, useExisting: NbCellDefDirective }],
                }]
        }] });
/**
 * Header cell definition for the nb-table.
 * Captures the template of a column's header cell and as well as cell-specific properties.
 */
export class NbHeaderCellDefDirective extends CdkHeaderCellDef {
}
NbHeaderCellDefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbHeaderCellDefDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NbHeaderCellDefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.4", type: NbHeaderCellDefDirective, selector: "[nbHeaderCellDef]", providers: [{ provide: CdkHeaderCellDef, useExisting: NbHeaderCellDefDirective }], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbHeaderCellDefDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nbHeaderCellDef]',
                    providers: [{ provide: CdkHeaderCellDef, useExisting: NbHeaderCellDefDirective }],
                }]
        }] });
/**
 * Footer cell definition for the nb-table.
 * Captures the template of a column's footer cell and as well as cell-specific properties.
 */
export class NbFooterCellDefDirective extends CdkFooterCellDef {
}
NbFooterCellDefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbFooterCellDefDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NbFooterCellDefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.4", type: NbFooterCellDefDirective, selector: "[nbFooterCellDef]", providers: [{ provide: CdkFooterCellDef, useExisting: NbFooterCellDefDirective }], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbFooterCellDefDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nbFooterCellDef]',
                    providers: [{ provide: CdkFooterCellDef, useExisting: NbFooterCellDefDirective }],
                }]
        }] });
export const NB_SORT_HEADER_COLUMN_DEF = new InjectionToken('NB_SORT_HEADER_COLUMN_DEF');
/**
 * Column definition for the nb-table.
 * Defines a set of cells available for a table column.
 */
export class NbColumnDefDirective extends CdkColumnDef {
    /** Unique name for this column. */
    get name() {
        return this._name;
    }
    set name(value) {
        this._setNameInput(value);
    }
    /** Whether this column should be sticky positioned on the end of the row */
    get stickyEnd() {
        return this._stickyEnd;
    }
    set stickyEnd(value) {
        const prevValue = this._stickyEnd;
        this._stickyEnd = coerceBooleanProperty(value);
        this._hasStickyChanged = prevValue !== this._stickyEnd;
    }
}
NbColumnDefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbColumnDefDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NbColumnDefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.4", type: NbColumnDefDirective, selector: "[nbColumnDef]", inputs: { name: ["nbColumnDef", "name"], sticky: "sticky", stickyEnd: "stickyEnd" }, providers: [
        { provide: CdkColumnDef, useExisting: NbColumnDefDirective },
        { provide: NB_SORT_HEADER_COLUMN_DEF, useExisting: NbColumnDefDirective },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbColumnDefDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nbColumnDef]',
                    providers: [
                        { provide: CdkColumnDef, useExisting: NbColumnDefDirective },
                        { provide: NB_SORT_HEADER_COLUMN_DEF, useExisting: NbColumnDefDirective },
                    ],
                }]
        }], propDecorators: { name: [{
                type: Input,
                args: ['nbColumnDef']
            }], sticky: [{
                type: Input
            }], stickyEnd: [{
                type: Input
            }] } });
/** Header cell template container that adds the right classes and role. */
export class NbHeaderCellDirective extends CdkHeaderCell {
    constructor(columnDef, elementRef) {
        super(columnDef, elementRef);
        elementRef.nativeElement.classList.add(`nb-column-${columnDef.cssClassFriendlyName}`);
    }
}
NbHeaderCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbHeaderCellDirective, deps: [{ token: NbColumnDefDirective }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
NbHeaderCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.4", type: NbHeaderCellDirective, selector: "nb-header-cell, th[nbHeaderCell]", host: { attributes: { "role": "columnheader" }, classAttribute: "nb-header-cell" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbHeaderCellDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'nb-header-cell, th[nbHeaderCell]',
                    host: {
                        'class': 'nb-header-cell',
                        'role': 'columnheader',
                    },
                }]
        }], ctorParameters: function () { return [{ type: NbColumnDefDirective }, { type: i0.ElementRef }]; } });
/** Footer cell template container that adds the right classes and role. */
export class NbFooterCellDirective extends CdkFooterCell {
    constructor(columnDef, elementRef) {
        super(columnDef, elementRef);
        elementRef.nativeElement.classList.add(`nb-column-${columnDef.cssClassFriendlyName}`);
    }
}
NbFooterCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbFooterCellDirective, deps: [{ token: NbColumnDefDirective }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
NbFooterCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.4", type: NbFooterCellDirective, selector: "nb-footer-cell, td[nbFooterCell]", host: { attributes: { "role": "gridcell" }, classAttribute: "nb-footer-cell" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbFooterCellDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'nb-footer-cell, td[nbFooterCell]',
                    host: {
                        'class': 'nb-footer-cell',
                        'role': 'gridcell',
                    },
                }]
        }], ctorParameters: function () { return [{ type: NbColumnDefDirective }, { type: i0.ElementRef }]; } });
/** Cell template container that adds the right classes and role. */
export class NbCellDirective extends CdkCell {
    constructor(columnDef, elementRef) {
        super(columnDef, elementRef);
        elementRef.nativeElement.classList.add(`nb-column-${columnDef.cssClassFriendlyName}`);
    }
}
NbCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbCellDirective, deps: [{ token: NbColumnDefDirective }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
NbCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.4", type: NbCellDirective, selector: "nb-cell, td[nbCell]", host: { attributes: { "role": "gridcell" }, classAttribute: "nb-cell" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbCellDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'nb-cell, td[nbCell]',
                    host: {
                        'class': 'nb-cell',
                        'role': 'gridcell',
                    },
                }]
        }], ctorParameters: function () { return [{ type: NbColumnDefDirective }, { type: i0.ElementRef }]; } });
//# sourceMappingURL=data:application/json;base64,