import { Component, ComponentFactoryResolver, HostBinding, Input, ViewChild, } from '@angular/core';
import { NbPosition } from './overlay-position';
import { NbPortalInjector, NbPortalOutletDirective } from './mapping';
import * as i0 from "@angular/core";
import * as i1 from "./mapping";
import * as i2 from "@angular/common";
export class NbPositionedContainerComponent {
    get top() {
        return this.position === NbPosition.TOP;
    }
    get topStart() {
        return this.position === NbPosition.TOP_START;
    }
    get topEnd() {
        return this.position === NbPosition.TOP_END;
    }
    get right() {
        return this.position === NbPosition.RIGHT || this.position === NbPosition.END;
    }
    get endTop() {
        return this.position === NbPosition.END_TOP;
    }
    get endBottom() {
        return this.position === NbPosition.END_BOTTOM;
    }
    get bottom() {
        return this.position === NbPosition.BOTTOM;
    }
    get bottomStart() {
        return this.position === NbPosition.BOTTOM_START;
    }
    get bottomEnd() {
        return this.position === NbPosition.BOTTOM_END;
    }
    get left() {
        return this.position === NbPosition.LEFT || this.position === NbPosition.START;
    }
    get startTop() {
        return this.position === NbPosition.START_TOP;
    }
    get startBottom() {
        return this.position === NbPosition.START_BOTTOM;
    }
}
NbPositionedContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbPositionedContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NbPositionedContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: NbPositionedContainerComponent, selector: "ng-component", inputs: { position: "position" }, host: { properties: { "class.nb-overlay-top": "this.top", "class.nb-overlay-top-start": "this.topStart", "class.nb-overlay-top-end": "this.topEnd", "class.nb-overlay-right": "this.right", "class.nb-overlay-end-top": "this.endTop", "class.nb-overlay-end-bottom": "this.endBottom", "class.nb-overlay-bottom": "this.bottom", "class.nb-overlay-bottom-start": "this.bottomStart", "class.nb-overlay-bottom-end": "this.bottomEnd", "class.nb-overlay-left": "this.left", "class.nb-overlay-start-top": "this.startTop", "class.nb-overlay-start-bottom": "this.startBottom" } }, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbPositionedContainerComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                }]
        }], propDecorators: { position: [{
                type: Input
            }], top: [{
                type: HostBinding,
                args: ['class.nb-overlay-top']
            }], topStart: [{
                type: HostBinding,
                args: ['class.nb-overlay-top-start']
            }], topEnd: [{
                type: HostBinding,
                args: ['class.nb-overlay-top-end']
            }], right: [{
                type: HostBinding,
                args: ['class.nb-overlay-right']
            }], endTop: [{
                type: HostBinding,
                args: ['class.nb-overlay-end-top']
            }], endBottom: [{
                type: HostBinding,
                args: ['class.nb-overlay-end-bottom']
            }], bottom: [{
                type: HostBinding,
                args: ['class.nb-overlay-bottom']
            }], bottomStart: [{
                type: HostBinding,
                args: ['class.nb-overlay-bottom-start']
            }], bottomEnd: [{
                type: HostBinding,
                args: ['class.nb-overlay-bottom-end']
            }], left: [{
                type: HostBinding,
                args: ['class.nb-overlay-left']
            }], startTop: [{
                type: HostBinding,
                args: ['class.nb-overlay-start-top']
            }], startBottom: [{
                type: HostBinding,
                args: ['class.nb-overlay-start-bottom']
            }] } });
export class NbOverlayContainerComponent {
    constructor(vcr, injector, changeDetectorRef) {
        this.vcr = vcr;
        this.injector = injector;
        this.changeDetectorRef = changeDetectorRef;
        this.isAttached = false;
    }
    get isStringContent() {
        return !!this.content;
    }
    attachComponentPortal(portal, context) {
        portal.injector = this.createChildInjector(portal.componentFactoryResolver);
        const componentRef = this.portalOutlet.attachComponentPortal(portal);
        if (context) {
            Object.assign(componentRef.instance, context);
        }
        componentRef.changeDetectorRef.markForCheck();
        componentRef.changeDetectorRef.detectChanges();
        this.isAttached = true;
        return componentRef;
    }
    attachTemplatePortal(portal) {
        const templateRef = this.portalOutlet.attachTemplatePortal(portal);
        templateRef.detectChanges();
        this.isAttached = true;
        return templateRef;
    }
    attachStringContent(content) {
        this.content = content;
        this.changeDetectorRef.markForCheck();
        this.changeDetectorRef.detectChanges();
        this.isAttached = true;
    }
    detach() {
        if (this.portalOutlet.hasAttached()) {
            this.portalOutlet.detach();
        }
        this.attachStringContent(null);
        this.isAttached = false;
    }
    createChildInjector(cfr) {
        return new NbPortalInjector(this.injector, new WeakMap([
            [ComponentFactoryResolver, cfr],
        ]));
    }
}
NbOverlayContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbOverlayContainerComponent, deps: [{ token: i0.ViewContainerRef }, { token: i0.Injector }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NbOverlayContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: NbOverlayContainerComponent, selector: "nb-overlay-container", viewQueries: [{ propertyName: "portalOutlet", first: true, predicate: NbPortalOutletDirective, descendants: true, static: true }], ngImport: i0, template: `
    <div *ngIf="isStringContent" class="primitive-overlay">{{ content }}</div>
    <ng-template nbPortalOutlet></ng-template>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NbPortalOutletDirective, selector: "[nbPortalOutlet]" }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbOverlayContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nb-overlay-container',
                    template: `
    <div *ngIf="isStringContent" class="primitive-overlay">{{ content }}</div>
    <ng-template nbPortalOutlet></ng-template>
  `,
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.Injector }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { portalOutlet: [{
                type: ViewChild,
                args: [NbPortalOutletDirective, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,