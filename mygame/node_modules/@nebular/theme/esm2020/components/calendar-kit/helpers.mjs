/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
export const batch = (target, batchSize, offset = 0) => {
    return target.reduce((res, item, index) => {
        const chunkIndex = Math.floor((index + offset) / batchSize);
        if (!res[chunkIndex]) {
            res[chunkIndex] = [];
        }
        res[chunkIndex].push(item);
        return res;
    }, []);
};
/**
 * returns array with numbers from first argument to bound.
 * */
export const rangeFromTo = (from, to = 0, producer = i => i) => {
    const arr = [];
    for (let i = from; i < to; i++) {
        arr.push(producer(i));
    }
    return arr;
};
/**
 * returns array with numbers from zero to bound.
 * */
export const range = (bound, producer = i => i) => {
    return rangeFromTo(0, bound, producer);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9mcmFtZXdvcmsvdGhlbWUvY29tcG9uZW50cy9jYWxlbmRhci1raXQvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLENBQUksTUFBVyxFQUFFLFNBQWlCLEVBQUUsU0FBaUIsQ0FBQyxFQUFTLEVBQUU7SUFDcEYsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRTtRQUN4QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDcEIsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUN0QjtRQUNELEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0IsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7QUFDUixDQUFDLENBQUM7QUFDRjs7S0FFSztBQUNMLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFJLElBQVksRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLFdBQTBCLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7SUFDdkYsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBRWYsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM5QixHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3ZCO0lBRUQsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDLENBQUM7QUFFRjs7S0FFSztBQUNMLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxDQUFJLEtBQWEsRUFBRSxXQUEwQixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFO0lBQzFFLE9BQU8sV0FBVyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDekMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuXG5leHBvcnQgY29uc3QgYmF0Y2ggPSA8VD4odGFyZ2V0OiBUW10sIGJhdGNoU2l6ZTogbnVtYmVyLCBvZmZzZXQ6IG51bWJlciA9IDApOiBUW11bXSA9PiB7XG4gIHJldHVybiB0YXJnZXQucmVkdWNlKChyZXMsIGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgY29uc3QgY2h1bmtJbmRleCA9IE1hdGguZmxvb3IoKGluZGV4ICsgb2Zmc2V0KSAvIGJhdGNoU2l6ZSk7XG4gICAgaWYgKCFyZXNbY2h1bmtJbmRleF0pIHtcbiAgICAgIHJlc1tjaHVua0luZGV4XSA9IFtdO1xuICAgIH1cbiAgICByZXNbY2h1bmtJbmRleF0ucHVzaChpdGVtKTtcbiAgICByZXR1cm4gcmVzO1xuICB9LCBbXSlcbn07XG4vKipcbiAqIHJldHVybnMgYXJyYXkgd2l0aCBudW1iZXJzIGZyb20gZmlyc3QgYXJndW1lbnQgdG8gYm91bmQuXG4gKiAqL1xuZXhwb3J0IGNvbnN0IHJhbmdlRnJvbVRvID0gPFQ+KGZyb206IG51bWJlciwgdG8gPSAwLCBwcm9kdWNlcjogKG51bWJlcikgPT4gVCA9IGkgPT4gaSkgPT4ge1xuICBjb25zdCBhcnIgPSBbXTtcblxuICBmb3IgKGxldCBpID0gZnJvbTsgaSA8IHRvOyBpKyspIHtcbiAgICBhcnIucHVzaChwcm9kdWNlcihpKSk7XG4gIH1cblxuICByZXR1cm4gYXJyO1xufTtcblxuLyoqXG4gKiByZXR1cm5zIGFycmF5IHdpdGggbnVtYmVycyBmcm9tIHplcm8gdG8gYm91bmQuXG4gKiAqL1xuZXhwb3J0IGNvbnN0IHJhbmdlID0gPFQ+KGJvdW5kOiBudW1iZXIsIHByb2R1Y2VyOiAobnVtYmVyKSA9PiBUID0gaSA9PiBpKSA9PiB7XG4gIHJldHVybiByYW5nZUZyb21UbygwLCBib3VuZCwgcHJvZHVjZXIpO1xufTtcbiJdfQ==