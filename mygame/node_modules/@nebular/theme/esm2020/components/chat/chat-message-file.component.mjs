/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "@angular/common";
import * as i3 from "../icon/icon.component";
import * as i4 from "./chat-message-text.component";
/**
 * Chat message component.
 */
export class NbChatMessageFileComponent {
    /**
     * Message file path
     * @type {Date}
     */
    set files(files) {
        this.readyFiles = (files || []).map((file) => {
            const isImage = this.isImage(file);
            return {
                ...file,
                urlStyle: isImage && this.domSanitizer.bypassSecurityTrustStyle(`url(${file.url})`),
                isImage: isImage,
            };
        });
        this.cd.detectChanges();
    }
    constructor(cd, domSanitizer) {
        this.cd = cd;
        this.domSanitizer = domSanitizer;
        /**
         * Message send date format, default 'shortTime'
         * @type {string}
         */
        this.dateFormat = 'shortTime';
    }
    isImage(file) {
        const type = file.type;
        if (type) {
            return ['image/png', 'image/jpeg', 'image/gif'].includes(type);
        }
        return false;
    }
}
NbChatMessageFileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbChatMessageFileComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component });
NbChatMessageFileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.4", type: NbChatMessageFileComponent, selector: "nb-chat-message-file", inputs: { message: "message", sender: "sender", date: "date", dateFormat: "dateFormat", files: "files" }, ngImport: i0, template: `
    <nb-chat-message-text [sender]="sender" [date]="date" [dateFormat]="dateFormat" [message]="message">
      {{ message }}
    </nb-chat-message-text>

    <ng-container *ngIf="readyFiles?.length > 1">
      <div class="message-content-group">
        <a *ngFor="let file of readyFiles" [href]="file.url" target="_blank">
          <nb-icon [icon]="file.icon" *ngIf="!file.urlStyle && file.icon"></nb-icon>
          <div *ngIf="file.urlStyle" [style.background-image]="file.urlStyle"></div>
        </a>
      </div>
    </ng-container>

    <ng-container *ngIf="readyFiles?.length === 1">
      <a [href]="readyFiles[0].url" target="_blank">
        <nb-icon [icon]="readyFiles[0].icon" *ngIf="!readyFiles[0].urlStyle && readyFiles[0].icon"></nb-icon>
        <div *ngIf="readyFiles[0].urlStyle" [style.background-image]="readyFiles[0].urlStyle"></div>
      </a>
    </ng-container>
  `, isInline: true, dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.NbIconComponent, selector: "nb-icon", inputs: ["icon", "pack", "options", "status", "config"] }, { kind: "component", type: i4.NbChatMessageTextComponent, selector: "nb-chat-message-text", inputs: ["sender", "message", "date", "dateFormat"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbChatMessageFileComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nb-chat-message-file',
                    template: `
    <nb-chat-message-text [sender]="sender" [date]="date" [dateFormat]="dateFormat" [message]="message">
      {{ message }}
    </nb-chat-message-text>

    <ng-container *ngIf="readyFiles?.length > 1">
      <div class="message-content-group">
        <a *ngFor="let file of readyFiles" [href]="file.url" target="_blank">
          <nb-icon [icon]="file.icon" *ngIf="!file.urlStyle && file.icon"></nb-icon>
          <div *ngIf="file.urlStyle" [style.background-image]="file.urlStyle"></div>
        </a>
      </div>
    </ng-container>

    <ng-container *ngIf="readyFiles?.length === 1">
      <a [href]="readyFiles[0].url" target="_blank">
        <nb-icon [icon]="readyFiles[0].icon" *ngIf="!readyFiles[0].urlStyle && readyFiles[0].icon"></nb-icon>
        <div *ngIf="readyFiles[0].urlStyle" [style.background-image]="readyFiles[0].urlStyle"></div>
      </a>
    </ng-container>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DomSanitizer }]; }, propDecorators: { message: [{
                type: Input
            }], sender: [{
                type: Input
            }], date: [{
                type: Input
            }], dateFormat: [{
                type: Input
            }], files: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC1tZXNzYWdlLWZpbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2ZyYW1ld29yay90aGVtZS9jb21wb25lbnRzL2NoYXQvY2hhdC1tZXNzYWdlLWZpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsdUJBQXVCLEVBQXFCLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQWE3Rjs7R0FFRztBQTBCSCxNQUFNLE9BQU8sMEJBQTBCO0lBNEJyQzs7O09BR0c7SUFDSCxJQUNJLEtBQUssQ0FBQyxLQUEwQjtRQUNsQyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFO1lBQ2hELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbkMsT0FBTztnQkFDTCxHQUFHLElBQUk7Z0JBQ1AsUUFBUSxFQUFFLE9BQU8sSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLHdCQUF3QixDQUFDLE9BQU8sSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO2dCQUNuRixPQUFPLEVBQUUsT0FBTzthQUNqQixDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxZQUFzQixFQUFxQixFQUFZLFlBQTBCO1FBQTNELE9BQUUsR0FBRixFQUFFLENBQW1CO1FBQVksaUJBQVksR0FBWixZQUFZLENBQWM7UUF2QmpGOzs7V0FHRztRQUNNLGVBQVUsR0FBVyxXQUFXLENBQUM7SUFvQjFDLENBQUM7SUFHRCxPQUFPLENBQUMsSUFBdUI7UUFDN0IsTUFBTSxJQUFJLEdBQUksSUFBc0MsQ0FBQyxJQUFJLENBQUM7UUFDMUQsSUFBSSxJQUFJLEVBQUU7WUFDUixPQUFPLENBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxXQUFXLENBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbEU7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O3VIQXZEVSwwQkFBMEI7MkdBQTFCLDBCQUEwQixzS0F2QjNCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW9CVDsyRkFHVSwwQkFBMEI7a0JBekJ0QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQlQ7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEO21JQVNVLE9BQU87c0JBQWYsS0FBSztnQkFNRyxNQUFNO3NCQUFkLEtBQUs7Z0JBTUcsSUFBSTtzQkFBWixLQUFLO2dCQU1HLFVBQVU7c0JBQWxCLEtBQUs7Z0JBT0YsS0FBSztzQkFEUixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5iQ2hhdE1lc3NhZ2VGaWxlSWNvblByZXZpZXcge1xuICB1cmw6IHN0cmluZztcbiAgaWNvbjogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBOYkNoYXRNZXNzYWdlRmlsZUltYWdlUHJldmlldyB7XG4gIHVybDogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG59XG5leHBvcnQgdHlwZSBOYkNoYXRNZXNzYWdlRmlsZSA9IE5iQ2hhdE1lc3NhZ2VGaWxlSWNvblByZXZpZXcgfCBOYkNoYXRNZXNzYWdlRmlsZUltYWdlUHJldmlldztcblxuLyoqXG4gKiBDaGF0IG1lc3NhZ2UgY29tcG9uZW50LlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduYi1jaGF0LW1lc3NhZ2UtZmlsZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5iLWNoYXQtbWVzc2FnZS10ZXh0IFtzZW5kZXJdPVwic2VuZGVyXCIgW2RhdGVdPVwiZGF0ZVwiIFtkYXRlRm9ybWF0XT1cImRhdGVGb3JtYXRcIiBbbWVzc2FnZV09XCJtZXNzYWdlXCI+XG4gICAgICB7eyBtZXNzYWdlIH19XG4gICAgPC9uYi1jaGF0LW1lc3NhZ2UtdGV4dD5cblxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJyZWFkeUZpbGVzPy5sZW5ndGggPiAxXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1jb250ZW50LWdyb3VwXCI+XG4gICAgICAgIDxhICpuZ0Zvcj1cImxldCBmaWxlIG9mIHJlYWR5RmlsZXNcIiBbaHJlZl09XCJmaWxlLnVybFwiIHRhcmdldD1cIl9ibGFua1wiPlxuICAgICAgICAgIDxuYi1pY29uIFtpY29uXT1cImZpbGUuaWNvblwiICpuZ0lmPVwiIWZpbGUudXJsU3R5bGUgJiYgZmlsZS5pY29uXCI+PC9uYi1pY29uPlxuICAgICAgICAgIDxkaXYgKm5nSWY9XCJmaWxlLnVybFN0eWxlXCIgW3N0eWxlLmJhY2tncm91bmQtaW1hZ2VdPVwiZmlsZS51cmxTdHlsZVwiPjwvZGl2PlxuICAgICAgICA8L2E+XG4gICAgICA8L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJyZWFkeUZpbGVzPy5sZW5ndGggPT09IDFcIj5cbiAgICAgIDxhIFtocmVmXT1cInJlYWR5RmlsZXNbMF0udXJsXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgIDxuYi1pY29uIFtpY29uXT1cInJlYWR5RmlsZXNbMF0uaWNvblwiICpuZ0lmPVwiIXJlYWR5RmlsZXNbMF0udXJsU3R5bGUgJiYgcmVhZHlGaWxlc1swXS5pY29uXCI+PC9uYi1pY29uPlxuICAgICAgICA8ZGl2ICpuZ0lmPVwicmVhZHlGaWxlc1swXS51cmxTdHlsZVwiIFtzdHlsZS5iYWNrZ3JvdW5kLWltYWdlXT1cInJlYWR5RmlsZXNbMF0udXJsU3R5bGVcIj48L2Rpdj5cbiAgICAgIDwvYT5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE5iQ2hhdE1lc3NhZ2VGaWxlQ29tcG9uZW50IHtcblxuICByZWFkeUZpbGVzOiBhbnlbXTtcblxuICAvKipcbiAgICogTWVzc2FnZSBzZW5kZXJcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIEBJbnB1dCgpIG1lc3NhZ2U6IHN0cmluZztcblxuICAvKipcbiAgICogTWVzc2FnZSBzZW5kZXJcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIEBJbnB1dCgpIHNlbmRlcjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBNZXNzYWdlIHNlbmQgZGF0ZVxuICAgKiBAdHlwZSB7RGF0ZX1cbiAgICovXG4gIEBJbnB1dCgpIGRhdGU6IERhdGU7XG5cbiAgLyoqXG4gICAqIE1lc3NhZ2Ugc2VuZCBkYXRlIGZvcm1hdCwgZGVmYXVsdCAnc2hvcnRUaW1lJ1xuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgQElucHV0KCkgZGF0ZUZvcm1hdDogc3RyaW5nID0gJ3Nob3J0VGltZSc7XG5cbiAgLyoqXG4gICAqIE1lc3NhZ2UgZmlsZSBwYXRoXG4gICAqIEB0eXBlIHtEYXRlfVxuICAgKi9cbiAgQElucHV0KClcbiAgc2V0IGZpbGVzKGZpbGVzOiBOYkNoYXRNZXNzYWdlRmlsZVtdKSB7XG4gICAgdGhpcy5yZWFkeUZpbGVzID0gKGZpbGVzIHx8IFtdKS5tYXAoKGZpbGU6IGFueSkgPT4ge1xuICAgICAgY29uc3QgaXNJbWFnZSA9IHRoaXMuaXNJbWFnZShmaWxlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmZpbGUsXG4gICAgICAgIHVybFN0eWxlOiBpc0ltYWdlICYmIHRoaXMuZG9tU2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RTdHlsZShgdXJsKCR7ZmlsZS51cmx9KWApLFxuICAgICAgICBpc0ltYWdlOiBpc0ltYWdlLFxuICAgICAgfTtcbiAgICB9KTtcbiAgICB0aGlzLmNkLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYsIHByb3RlY3RlZCBkb21TYW5pdGl6ZXI6IERvbVNhbml0aXplcikge1xuICB9XG5cblxuICBpc0ltYWdlKGZpbGU6IE5iQ2hhdE1lc3NhZ2VGaWxlKTogYm9vbGVhbiB7XG4gICAgY29uc3QgdHlwZSA9IChmaWxlIGFzIE5iQ2hhdE1lc3NhZ2VGaWxlSW1hZ2VQcmV2aWV3KS50eXBlO1xuICAgIGlmICh0eXBlKSB7XG4gICAgICByZXR1cm4gWyAnaW1hZ2UvcG5nJywgJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvZ2lmJyBdLmluY2x1ZGVzKHR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbiJdfQ==